import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Download, Share2 } from "lucide-react";
import { useToast } from "@/hooks/use-toast";

interface SpecSheetProps {
  data: {
    videoUrl: string;
    creator: string;
    hookDetected: string;
    loopStrength: string;
    trendingSound: string;
    topHashtags: string[];
    viralityScore: number;
    frameBreakdown: string[];
  };
}

export const SpecSheet = ({ data }: SpecSheetProps) => {
  const { toast } = useToast();

  const generateMarkdown = () => {
    return `# VIRALIFY Spec Sheet

**Video URL:** ${data.videoUrl}  
**Creator:** ${data.creator}  
**Hook Detected:** ${data.hookDetected}  
**Loop Strength:** ${data.loopStrength}  
**Trending Sound:** ${data.trendingSound}  
**Top Hashtags:** ${data.topHashtags.join(", ")}  
**Virality Score:** ${data.viralityScore}/100

## FRAME BREAKDOWN
${data.frameBreakdown.map((frame, i) => `${i + 1}. ${frame}`).join("\n")}

---
*Generated by VIRALIFY - TikTok Viral Analysis Tool*
`;
  };

  const handleDownload = () => {
    const markdown = generateMarkdown();
    const blob = new Blob([markdown], { type: "text/markdown" });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = `viralify-spec-${Date.now()}.md`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);

    toast({
      title: "Spec Sheet Downloaded! ðŸŽ‰",
      description: "Your viral analysis spec has been saved",
    });
  };

  const handleShare = () => {
    const markdown = generateMarkdown();
    navigator.clipboard.writeText(markdown);
    
    toast({
      title: "Copied to Clipboard! ðŸ“‹",
      description: "Spec sheet markdown ready to paste",
    });
  };

  return (
    <Card className="p-6 bg-white/10 backdrop-blur-sm border-comic rounded-[30px]">
      <div className="flex items-center justify-between mb-6">
        <h2 className="text-2xl font-comic text-white text-outline-black-thin">
          SPEC SHEET
        </h2>
        <div className="flex gap-2">
          <Button
            onClick={handleShare}
            className="bg-purple-500 hover:bg-purple-600 border-4 border-black text-white font-bold rounded-xl text-sm"
          >
            <Share2 className="w-4 h-4 mr-1" />
            Share
          </Button>
          <Button
            onClick={handleDownload}
            className="gradient-audio hover:opacity-90 border-4 border-black text-black font-bold rounded-xl text-sm"
          >
            <Download className="w-4 h-4 mr-1" />
            Download
          </Button>
        </div>
      </div>

      <div className="space-y-4 text-white">
        <div>
          <p className="text-white/60 text-xs font-bold mb-1">VIDEO URL</p>
          <p className="font-mono text-sm break-all text-yellow-300">{data.videoUrl}</p>
        </div>

        <div className="grid grid-cols-2 gap-4">
          <div>
            <p className="text-white/60 text-xs font-bold mb-1">CREATOR</p>
            <p className="font-bold">{data.creator}</p>
          </div>
          <div>
            <p className="text-white/60 text-xs font-bold mb-1">VIRALITY SCORE</p>
            <p className="text-3xl font-comic text-yellow-300 text-outline-black-thin">
              {data.viralityScore}/100
            </p>
          </div>
        </div>

        <div>
          <p className="text-white/60 text-xs font-bold mb-1">HOOK DETECTED</p>
          <p className="font-semibold text-sm">{data.hookDetected}</p>
        </div>

        <div>
          <p className="text-white/60 text-xs font-bold mb-1">LOOP STRENGTH</p>
          <p className="font-semibold text-sm">{data.loopStrength}</p>
        </div>

        <div>
          <p className="text-white/60 text-xs font-bold mb-1">TRENDING SOUND</p>
          <p className="font-semibold text-sm">{data.trendingSound}</p>
        </div>

        <div>
          <p className="text-white/60 text-xs font-bold mb-2">TOP HASHTAGS</p>
          <div className="flex flex-wrap gap-2">
            {data.topHashtags.map((tag, i) => (
              <span
                key={i}
                className="px-3 py-1 bg-purple-500/30 border-2 border-black rounded-full text-xs font-bold"
              >
                {tag}
              </span>
            ))}
          </div>
        </div>

        <div>
          <p className="text-white/60 text-xs font-bold mb-2">FRAME BREAKDOWN</p>
          <div className="space-y-2 bg-black/30 p-4 rounded-xl border-2 border-black">
            {data.frameBreakdown.map((frame, i) => (
              <p key={i} className="text-sm">
                <span className="font-bold text-yellow-300">{i + 1}.</span> {frame}
              </p>
            ))}
          </div>
        </div>
      </div>
    </Card>
  );
};
